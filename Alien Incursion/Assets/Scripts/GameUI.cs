using UnityEngine;using System.Collections;using UnityEngine.UI;using UnityEngine.SceneManagement;using System;public class GameUI : MonoBehaviour{    const float FULL_HEALTH = 100f;    const float FULL_ARMOR = 100f;    const float HALF_ARMOR = FULL_ARMOR / 2f;    const float COUNTDOWN_DEFAULT = 600f;    public AvatarController AC;    public bool playerAlive = true;    public int playerLives = 5;    public float playerHealth = FULL_HEALTH;    public float playerArmor = FULL_ARMOR;    public Text TxtTimer;    public RectTransform LifeBar;    public RectTransform ArmorBar;    public Image LivesCounter;    public Sprite Lives_0;    public Sprite Lives_1;    public Sprite Lives_2;    public Sprite Lives_3;    public Sprite Lives_4;    public Sprite Lives_5;    public CanvasGroup PauseScreen;    private float timeRemaining;    private bool isPaused = false;    private Vector2 middleScreen = new Vector2(0.0f, 0.0f);    private Vector2 offScreen = new Vector2(-10000.0f, -10000.0f);    // Use this for initialization    void Start()    {        isPaused = false;        StartLevel();    }    // Update is called once per frame    void Update()    {        if (Input.GetKeyDown(KeyCode.Escape)) {            TogglePause();        }        if (playerAlive)        {            TimeSpan ts = TimeSpan.FromSeconds(timeRemaining);            string formatTime = string.Format("{0:D2} : {1:D2}", ts.Minutes, ts.Seconds);            TxtTimer.text = formatTime;            timeRemaining -= Time.deltaTime;            if (timeRemaining < 0)            {                KillPlayer();            }        }    }    private void Show(CanvasGroup cg)    {        cg.alpha = 1.0f;        RectTransform tempRect = cg.GetComponent<RectTransform>();        tempRect.anchoredPosition = middleScreen;    }    private void Hide(CanvasGroup cg)    {        cg.alpha = 0.0f;        RectTransform tempRect = cg.GetComponent<RectTransform>();        tempRect.anchoredPosition = offScreen;    }    private void StartLevel()    {        timeRemaining = 600f;        playerAlive = true;        UpdateGameUI();    }    public void KillPlayer()    {        playerAlive = false;        playerLives -= 1;        ResetPlayer();        if (playerLives < 0)        {            SceneManager.LoadScene("Gameover");        }        else        {            UpdateGameUI();        }    }    public void ResetPlayer()    {        timeRemaining = COUNTDOWN_DEFAULT;        playerHealth = FULL_HEALTH;        playerArmor = HALF_ARMOR;        playerAlive = true;        AC.transform.position = AC.LastStartPos;        UpdateGameUI();    }    public void TestHurt()    {        HurtPlayer(10);    }    public void HurtPlayer(float amount)    {        float hurtArmor;        float hurtLife;        hurtArmor = amount * 0.80f;        hurtLife = amount * 0.20f;        if (playerArmor > 0)        {            playerArmor -= hurtArmor;            if (playerArmor < 0)            {                hurtArmor = Math.Abs(playerArmor);                playerArmor = 0;            }            else            {                hurtArmor = 0;            }        }        playerHealth -= (hurtLife + hurtArmor);        if (playerHealth <= 0)        {            KillPlayer();        }        UpdateGameUI();    }    public void UpdateGameUI()    {        LifeBar.localScale = new Vector3(1, playerHealth / 100, 0);        ArmorBar.localScale = new Vector3(1, playerArmor / 100, 0);        switch (playerLives)        {            case 5:                LivesCounter.sprite = Lives_5;                break;            case 4:                LivesCounter.sprite = Lives_4;                break;            case 3:                LivesCounter.sprite = Lives_3;                break;            case 2:                LivesCounter.sprite = Lives_2;                break;            case 1:                LivesCounter.sprite = Lives_1;                break;            case 0:                LivesCounter.sprite = Lives_0;                break;        }    }    public void EndGame()    {        SceneManager.LoadScene("Gameover");    }    public void TogglePause()    {        if (isPaused)        {            Time.timeScale = 1;            Hide(PauseScreen);            isPaused = false;        }        else {            Time.timeScale = 0;            Show(PauseScreen);            isPaused = true;        }    }}